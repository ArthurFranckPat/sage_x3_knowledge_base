<!DOCTYPE html>
<html lang="fr" x-data="{ darkMode: localStorage.getItem('theme') === 'dark' }" :class="{ 'dark': darkMode }" x-init="$watch('darkMode', value => localStorage.setItem('theme', value ? 'dark' : 'light'))">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SQL Playground - Sage X3</title>
  
  @vite(['resources/css/app.css', 'resources/js/app.js'])
  
  <style>
    [x-cloak] { display: none !important; }
  </style>
</head>
<body>
  <!-- App Shell -->
  <div class="app-shell">
    
    <!-- Header -->
    <header class="app-header">
      <div class="app-header-title">
        <span class="app-header-logo">üöÄ</span>
        <span>SQL Playground - Sage X3</span>
      </div>
      <div class="app-header-actions">
        @!ui.button({ variant: 'ghost', size: 'icon' })
          TEST BUTTON
        @end
        
        @!component('components/ui/button', {
          variant: 'ghost',
          size: 'icon',
          onclick: 'showShortcuts()',
          title: 'Keyboard shortcuts (?)'
        })
          ‚å®Ô∏è
        @end
      </div>
    </header>

    <!-- Main Content -->
    <div class="app-main">
      
      <!-- Sidebar -->
      <aside class="app-sidebar">
        <button 
          class="sidebar-icon-btn" 
          up-layer="new drawer" 
          up-href="/playground/schema" 
          up-size="large"
          title="Schema Explorer">
          üìä
        </button>
        
        <button 
          class="sidebar-icon-btn"
          up-layer="new drawer" 
          up-href="/playground/history"
          up-size="large"
          title="History">
          üìù
        </button>
        
        <button 
          class="sidebar-icon-btn"
          up-layer="new drawer" 
          up-href="/playground/favorites"
          up-size="large"
          title="Favorites">
          ‚≠ê
        </button>
      </aside>

      <!-- Content Area (Split View) -->
      <div class="app-content">
        
        <!-- Editor Panel (Left) -->
        <div class="editor-panel">
          <div class="editor-container">
            
            <!-- Monaco Editor -->
            <div class="editor-wrapper">
              <div id="monaco-editor">
                <!-- Fallback textarea -->
                <textarea 
                  id="sql-fallback-editor" 
                  style="width: 100%; height: 100%; font-family: monospace; padding: 10px; border: none; resize: none;"
                  placeholder="Loading Monaco Editor...">SELECT * FROM itmmaster LIMIT 10</textarea>
              </div>
            </div>

            <!-- Validation Section -->
            <div class="validation-section">
              <div id="validation-container">
                <div id="validation" up-hungry up-keep>
                  @if(validation)
                    @include('playground/partials/validation')
                  @end
                </div>
              </div>
            </div>

            <!-- Actions -->
            <form 
              id="sql-form"
              up-submit 
              up-target="#results-container, #validation-container" 
              up-fail-target="#validation-container"
              method="POST" 
              action="/api/playground/execute"
              onsubmit="return copyEditorToInput()">
              
              {{ csrfField() }}
              <input type="hidden" name="sql" id="sql-input">
              
              <div class="editor-actions" up-keep>
                @!component('components/ui/button', {
                  type: 'submit',
                  variant: 'success'
                })
                  ‚ñ∂Ô∏è Execute Query
                @end
                
                @!component('components/ui/button', {
                  type: 'button',
                  variant: 'destructive',
                  onclick: "window.sqlEditor?.setValue('SELECT * FROM itmmaster LIMIT 10')"
                })
                  üîÑ Reset
                @end
                
                @!component('components/ui/button', {
                  type: 'button',
                  variant: 'outline',
                  'up-validate': true,
                  'up-target': '#validation-container',
                  'up-method': 'POST',
                  'up-url': '/api/playground/validate',
                  onclick: "document.querySelector('#sql-input').value = window.sqlEditor?.getValue() || ''"
                })
                  ‚úì Validate
                @end
              </div>
            </form>

          </div>
        </div>

        <!-- Results Panel (Right) -->
        <div class="results-panel">
          <div class="results-container">
            
            <!-- Results Header -->
            <div class="results-header">
              <h2 class="results-title">Query Results</h2>
              <div class="results-metrics">
                <!-- Metrics badges will be added via Alpine.js or partials -->
              </div>
            </div>

            <!-- Results Content -->
            <div id="results-container">
              <div id="results" up-hungry>
                @if(result)
                  @include('playground/partials/results')
                @else
                  <div class="results-empty">
                    <div class="results-empty-icon">üìä</div>
                    <div class="results-empty-title">No results yet</div>
                    <div class="results-empty-description">
                      Execute a SQL query to see results here
                    </div>
                  </div>
                @end
              </div>
            </div>

          </div>
        </div>

      </div>
    </div>

  </div>

  <script>
    // Show shortcuts modal (to be implemented with modal component)
    function showShortcuts() {
      alert('Keyboard shortcuts:\nCtrl+Enter - Execute query\nCtrl+Shift+F - Format SQL')
    }
  </script>
</body>
</html>
